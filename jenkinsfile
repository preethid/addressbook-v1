pipeline {
    agent none
    tools{
        maven 'maven install'
    }
    parameters{
        string (name: 'Env' ,defaultValue: 'Test' ,description: 'provide the environment')
        booleanParam (name: 'executeTests' ,defaultValue: 'true' ,description: 'Decide to run test cases')
        choice (name: 'APPVERSION' ,choices: ['1.1','1.2','1.3'] ,description: 'select application version')

    }
    stages {
        stage('compile-code') {
            agent {label 'slave-1'}
            steps {
                script {
                echo 'Compiling the code'
                echo "Compiling in ${params.Env} environment"
                sh "mvn clean compile"
                }
            }
        }
  
        stage('Review-code') {
            agent {label 'slave-1'}
            steps {
                script {
                echo 'Reviewing the code using sure-fires plugin'
                sh "mvn pmd:pmd"
                }
            }
        }
   
        stage('Unit test') {
            agent {label 'slave-1'}
            when{
                expression{
                    params.executeTests == true
                }
            }
            steps {
                script {
                echo ' Test the code '
                sh "mvn test"
                }
            }
        }
    
        stage('Code analysis') {
            agent {label 'slave-1'}
            steps {
                echo 'Code analysis sucessfull using jacoco plugin'
                sh "mvn verify"
            }
        }
    
        stage('code package') {
            agent {label 'slave-1'}
            steps {
                script {
                echo 'packaging the code sucessful'
                echo "packaging version is ${params.APPVERSION}"
                sh "mvn package"
                 }
            }
        }
  
        stage('Deploy') {
            agent {label 'slave-1'}
            steps {
                script {
                echo 'Attaching the artifacts inside the jfrog'
                sh "mvn -U deploy -s settings.xml"
                }
            }
        }
    }
}
